<?php

/**
 * Implements hook_menu().
 */
function uservoice_menu() {
  $items['admin/config/user-interface/uservoice'] = array(
    'title' => 'Uservoice',
    'route_name' => 'uservoice.settings_form',
    'description' => 'Settings for Uservoice widget',
  );
  return $items;
}

/**
 * Implementation of hook_page_build
 */
function uservoice_page_build(&$page) {
  if (arg(0) == 'admin') {
    return FALSE;
  }

  $config = \Drupal::config('uservoice.settings');

  if (!$config->get('api_key')) {
    drupal_set_message(t('UserVoice setup is not complete. Go to !configureLink and add your API Key.', array('!configureLink' => l('the settings page', 'admin/config/user-interface/uservoice'))), 'error');
    return;
  }

  $uservoice_settings = array(
    'api_key'                  => $config->get('api_key'),
    'accent_color'             => $config->get('accent_color'),
    'trigger_color'            => $config->get('trigger_color'),
    'trigger_background_color' => $config->get('trigger_background_color'),
    'trigger_style'            => $config->get('trigger_style'),
    'trigger_position'         => $config->get('trigger_position'),
    'mode'                     => $config->get('mode'),
    'locale'                   => $config->get('locale'),
  );
  drupal_add_js(array('UserVoice' => $uservoice_settings), 'setting');
  drupal_add_library('uservoice', 'uservoice');
}

/**
 * Implements hook_library_info().
 */
function uservoice_library_info() {
  $libraries['uservoice'] = array(
    'title' => 'Uservoice',
    'version' => \Drupal::VERSION,
    'js' => array(
      drupal_get_path('module', 'uservoice') . '/js/uservoice.js' => array(),
    ),
    'dependencies' => array(
      array('system', 'jquery'),
      array('system', 'drupal'),
    ),
  );

  return $libraries;
}
